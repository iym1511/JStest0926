package chap07_Object;

public class ObjectClass {

	public static void main(String[] args) { // 메인은 한패키지에 하나만
		// TODO Auto-generated method stub
		// 객체의 생성
		Box myBox; // 같은 공간에있는 클래스 가져옴
		myBox = new Box();
		 
		// 객체 = 세상에 있는 객체(오브젝트) 를 참고하여 만듬.
		//		ex) 자동차, 상자
		// 자바는 객체지향 언어이다 - 캡슐화
		// 캡슐화의 특징 : 값과 메소드가 함께 들어가있다.
		// 				쉽게 바꿀수 있다
		// 객체를 표현하기 위해서 class 사용
		// class는 객체를 만드는 틀
		// 객체는 클래스를통해 생성된 것
		
		// 미리 작성된 클래스 String
		String name = new String("홍길동");
							// 객체 name은 . (도트)를 통해 메소드를 사용할 수 있다
		System.out.println(name.equals("홍길동"));
		
		// 직접만든 클래스의 객체 Box에 접근하기
		// 참조형 변수로 사용, 변수이름으로 접군 - 주소출력
		System.out.println(myBox); // chap07_Object.Box@5e91993f
		// 객체에 접근 하는 방법 - 필드의 값에 접근해서 출력
		System.out.println(myBox.height1); // myBox에 있던것 가져옴
		// 객체에 접근하는 방법 - 메소드의 계산 결과를 출력
		//int a = myBox.calVoume();
		//System.out.println(myBox.calVoume());
		//System.out.println(a); // 1000
		
		
		System.out.println("----------------------------------------------------");
		
		
		// 만든 클래스의 객체 생성하기
		Student myStudent = new Student(); // myStudent에 접근후 아래에서 결과출력
		System.out.println(myStudent.name);
		// 필드에 직접 접근해서 값할당 (잘 사용하지않음)
		myStudent.name = "홍길동";
		System.out.println(myStudent.name); //홍길동
		myStudent.age = 25;
		System.out.println(myStudent.age); //25
		myStudent.grade = 3; // 객체를 생성하고나면 그안에있는것만 제공
		myStudent.printGrade(); // myStudent의 메소드값도 들고와서 출력됨
		
		// myStudent 붕어빵
		// class(설계도) 붕어빵기계 틀
		System.out.println("----------------------------------------------------");
		
		// 다른 객체 생성
		Student myStudent1 = new Student();
		System.out.println(myStudent1.name);
		myStudent1.printGrade();
		
		System.out.println("----------------------------------------------------");
		
		// 변수에 들어가 있는 값 확인
		System.out.println(myStudent); // chap07_Object.Student@379619aa
		System.out.println(myStudent1); // chap07_Object.Student@cac736f
		
		System.out.println("----------------------------------------------------");
		
		// new와 생성자를 통해서 객체 생성
		// Box(50) 50의 값을 인수라고 부른다
		Box mybox2 = new Box(50); // 50*50*50
		//System.out.println(mybox2.calVoume()); // 125000
		
		System.out.println("----------------------------------------------------");
		
		//student 클래스에서 가져옴
		Student s1 = new Student();
		// Student s2 = new Student("흥부");
		Student s3 = new Student("놀부", 25, 5);// 여기 5가 밑에 s3 값으로 나옴
		System.out.println(s1.name);
		System.out.println(s3.name+s3.age+" "+s3.grade); // 놀부25 5
		
		myBox.printData(); // 현재 가로세로높이길이 :10, 10, 10
		
		myBox.setWidth(50); // width만 50으로 변경
		myBox.printData(); // 50 10 10
		
		s1.setGrade(2);
		s1.printGrade();
		s3.printGrade(); // 다른값
		// return 값 25가 들어감
		System.out.println(s3.getAge());
		// 아래와 같이 출력되는것과 동일
		// System.out.println(25);
		
		s1.printLevel(); // s1의 값에따라 고학년 저학년이 나뉨
		s3.printLevel();
		
		System.out.println("----------------------------------------------------");
		
		// 실습 숫자를 입력받고 양수/음수를 알려주는 클래스
		NumCheck Num = new NumCheck();
		Num.setNum(2); // 여기에 비교할 값을 작성
		Num.checkNum(); // if문 메소드 비교값 결과 출력
		
		
	}									

}
